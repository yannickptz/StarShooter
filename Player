<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>Player.java</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<style type="text/css">
<!--
body {color: #a9b7c6; background-color: #2b2b2b; font-family: Monospaced}
pre {color: #a9b7c6; background-color: #2b2b2b; font-family: Monospaced}
table {color: #888888; background-color: #313335; font-family: Monospaced}
.whitespace {color: #505050}
.ST2 {color: #9876aa; font-family: Monospaced; font-style: italic}
.string {color: #6a8759}
.number {color: #6897bb}
.ST0 {color: #9876aa}
.ST3 {color: #ffc66d}
.ST1 {font-family: Monospaced; font-style: italic}
.literal {color: #cc7832}
-->
</style>
</head>
<body>
<table width="100%"><tr><td align="center">/Users/Yannick/Documents/Informatik/StarShooter/src/Move/Player.java</td></tr></table>
<pre>
 1 
 2  
 3 <span class="literal">package</span> Move;
 4 
 5 <span class="literal">import</span> java.awt.Rectangle;
 6 <span class="literal">import</span> java.awt.event.KeyEvent;
 7 <span class="literal">import</span> java.awt.image.BufferedImage;
 8 <span class="literal">import</span> java.io.IOException;
 9 <span class="literal">import</span> java.util.logging.Level;
10 <span class="literal">import</span> java.util.logging.Logger;
11 <span class="literal">import</span> javax.imageio.ImageIO;
12 
13 
14 <span class="literal">public</span> <span class="literal">class</span> Player {
15     <span class="literal">private</span> Rectangle <span class="ST0">bounding</span>;
16     <span class="literal">private</span> <span class="literal">float</span> <span class="ST0">f_posx</span>;
17     <span class="literal">private</span> <span class="literal">float</span> <span class="ST0">f_posy</span>;
18     <span class="literal">private</span> <span class="literal">int</span> <span class="ST0">worldsize_x</span>;
19     <span class="literal">private</span> <span class="literal">int</span> <span class="ST0">worldsize_y</span>;
20     <span class="literal">private</span> BufferedImage <span class="ST0">look</span>;
21     
22     
23     <span class="literal">public</span> Player(<span class="literal">int</span> x, <span class="literal">int</span> y, <span class="literal">int</span> size, <span class="literal">int</span> worldsize_x, <span class="literal">int</span> worldsize_y) {
24     
25         <span class="literal">try</span> {
26             <span class="ST0">look</span> = ImageIO.<span class="ST1">read</span>(getClass().getClassLoader().getResourceAsStream(<span class="string">&quot;</span><span class="string">gfx/raumschiff.png</span><span class="string">&quot;</span>) );
27         } <span class="literal">catch</span> (IOException ex) {
28             Logger.<span class="ST1">getLogger</span>(Player.<span class="literal">class</span>.getName()).log(Level.<span class="ST2">SEVERE</span>, <span class="literal">null</span>, ex);
29         }
30         <span class="ST0">bounding</span> = <span class="literal">new</span> Rectangle( x, y, <span class="ST0">look</span>.getWidth(), <span class="ST0">look</span>.getHeight());
31         <span class="ST0">f_posx</span> = x;
32         <span class="ST0">f_posy</span> = y;
33         <span class="literal">this</span>.<span class="ST0">worldsize_x</span>= worldsize_x;
34         <span class="literal">this</span>.<span class="ST0">worldsize_y</span>= worldsize_y;
35     
36 }
37 
38   
39     
40     <span class="literal">public</span> <span class="literal">void</span> <span class="ST3">update</span>(<span class="literal">float</span> timeSinceLastFrame) {
41         
42              <span class="literal">if</span>(Keyboard.<span class="ST1">isKeyDown</span>(KeyEvent.<span class="ST2">VK_W</span>)) <span class="ST0">f_posy</span>-=<span class="number">300</span>*timeSinceLastFrame;
43              <span class="literal">if</span>(Keyboard.<span class="ST1">isKeyDown</span>(KeyEvent.<span class="ST2">VK_S</span>)) <span class="ST0">f_posy</span>+=<span class="number">300</span>*timeSinceLastFrame;
44              <span class="literal">if</span>(Keyboard.<span class="ST1">isKeyDown</span>(KeyEvent.<span class="ST2">VK_D</span>))<span class="ST0">f_posx</span>+=<span class="number">300</span>*timeSinceLastFrame;
45              <span class="literal">if</span>(Keyboard.<span class="ST1">isKeyDown</span>(KeyEvent.<span class="ST2">VK_A</span>)) <span class="ST0">f_posx</span>-=<span class="number">300</span>*timeSinceLastFrame;
46              
47              
48              <span class="literal">if</span>(<span class="ST0">f_posx</span>&lt;<span class="number">0</span>)<span class="ST0">f_posx</span>=<span class="number">0</span>;
49              <span class="literal">if</span>(<span class="ST0">f_posy</span>&lt;<span class="number">0</span>)<span class="ST0">f_posy</span>=<span class="number">0</span>;
50              <span class="literal">if</span>(<span class="ST0">f_posx</span>&gt;<span class="ST0">worldsize_x</span>-<span class="ST0">bounding</span>.<span class="ST0">width</span>)<span class="ST0">f_posx</span>=<span class="ST0">worldsize_x</span>-<span class="ST0">bounding</span>.<span class="ST0">width</span>;
51              <span class="literal">if</span>(<span class="ST0">f_posy</span>&gt;<span class="ST0">worldsize_y</span>-<span class="ST0">bounding</span>.<span class="ST0">height</span>)<span class="ST0">f_posy</span>=<span class="ST0">worldsize_y</span>-<span class="ST0">bounding</span>.<span class="ST0">height</span>;
52              
53              <span class="ST0">bounding</span>.<span class="ST0">x</span>=(<span class="literal">int</span>)<span class="ST0">f_posx</span>;
54              <span class="ST0">bounding</span>.<span class="ST0">y</span>=(<span class="literal">int</span>)<span class="ST0">f_posy</span>;
55              
56         
57     }
58     
59     <span class="literal">public</span> Rectangle <span class="ST3">getBounding</span>(){
60          <span class="literal">return</span> <span class="ST0">bounding</span>;
61       
62     }
63     
64     <span class="literal">public</span> BufferedImage <span class="ST3">getLook</span>()
65             
66     {
67         <span class="literal">return</span> <span class="ST0">look</span>;
68     }
69     
70 }
71 
</pre></body>
</html>
